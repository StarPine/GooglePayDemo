plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "com.crab.friendlycc"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
//        archivesBaseName = "ddd"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('../../keystore/starpine.jks')
            storePassword 'starpine'
            keyAlias 'starpine'
            keyPassword 'starpine'
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            storeFile file('../../keystore/starpine.jks')
            storePassword 'starpine'
            keyAlias 'starpine'
            keyPassword 'starpine'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'org.jetbrains:annotations:15.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Google Play Billing Library.
    implementation 'com.android.billingclient:billing:4.0.0'
}

afterEvaluate {
    bundleDebug.doLast {
        def outputDir = "./build/_outputs/"
        println outputDir
        def lib_out = file(outputDir + "/lib_out")
        def aarPath = "./build/outputs/bundle/debug/app-debug.aab"
        copy {
            from file(aarPath)
            rename("app-debug.aab", "kgkag.aab")
            into lib_out
        }
    }
}